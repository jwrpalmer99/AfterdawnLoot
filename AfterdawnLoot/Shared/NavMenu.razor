@page "/NavMenu"
@inject UserManager<IdentityUser> _UserManager
@inject RoleManager<IdentityRole> _RoleManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">AfterdawnLoot</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="manageraids">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Raids
                </NavLink>
            </li>
        
        @*@if (CurrentUser.IsInRole(ADMINISTRATION_ROLE) || CurrentUser.IsInRole("Loot Managers"))
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="manageloot">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Manage Loot
                </NavLink>
            </li>
        }
        @if (CurrentUser.IsInRole(ADMINISTRATION_ROLE) || CurrentUser.IsInRole("Loot Managers"))
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="manageattendance">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Manage Attendance
                </NavLink>
            </li>
        }*@
        @if (CurrentUser.IsInRole(ADMINISTRATION_ROLE))
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="administration">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Administration
                </NavLink>
            </li>
        }
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    string ADMINISTRATION_ROLE = "Administrators";


    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private IEnumerable<Claim> _claims = Enumerable.Empty<Claim>();

    System.Security.Claims.ClaimsPrincipal CurrentUser;
    protected override async Task OnInitializedAsync()
    {
        CurrentUser = (await authenticationStateTask).User;
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
